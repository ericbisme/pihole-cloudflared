apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "pihole-cloudflared.fullname" . }}
  labels:
    app: {{ template "pihole-cloudflared.name" . }}
    chart: {{ template "pihole-cloudflared.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "pihole-cloudflared.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "pihole-cloudflared.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ template "pihole-cloudflared.fullname" . }}-pihole
          persistentVolumeClaim:
            claimName: {{ template "pihole-cloudflared.fullname" . }}-pihole
        - name: {{ template "pihole-cloudflared.fullname" . }}-dnsmasqd
          persistentVolumeClaim:
            claimName: {{ template "pihole-cloudflared.fullname" . }}-dnsmasqd
      containers:
        - name: {{ .Chart.Name }}-pihole
          image: "{{ .Values.image.pihole.repository }}:{{ .Values.image.pihole.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: {{ template "pihole-cloudflared.fullname" . }}-pihole
            mountPath: /etc/pihole
          - name: {{ template "pihole-cloudflared.fullname" . }}-dnsmasqd
            mountPath: /etc/dnsmasqd
          ports:
          - name: http
            containerPort: {{ .Values.service.port.http }}
            protocol: TCP
          - name: https
            containerPort: {{ .Values.service.port.https }}
            protocol: TCP
          - name: dnstcp
            containerPort: {{ .Values.service.port.dns }}
            protocol: TCP
          - name: dnsudp
            containerPort: {{ .Values.service.port.dns }}
            protocol: UDP
          - name: metrics
            containerPort: {{ .Values.service.port.metrics }}
            protocol: TCP
          livenessProbe:
            exec:
              command:
              - ls
              - /etc/pihole
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port.http }}
            initialDelaySeconds: 120
          env:
          - name: ServerIP
            value: {{ .Values.config.setupVars.IPV4_ADDRESS }}
          - name: "DNS1"
            value: "127.0.0.1#{{ .Values.service.port.dns }}{{ .Values.service.port.dns }}"
          - name: "DNS2"
            value: "127.0.0.1#{{ .Values.service.port.dns }}{{ .Values.service.port.dns }}"
          - name: "VIRTUAL_HOST"
            value: {{ .Values.virtual_host }}
          - name: TZ
            value: "America/Denver"
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: {{ .Chart.Name }}-cloudflared
          image: "{{ .Values.image.cloudflared.repository }}:{{ .Values.image.cloudflared.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.port.dns }}{{ .Values.service.port.dns }}
            protocol: TCP
          - containerPort: {{ .Values.service.port.dns }}{{ .Values.service.port.dns }}
            protocol: UDP
          env:
          - name: LOCAL_PORT
            value: "{{ .Values.service.port.dns }}{{ .Values.service.port.dns }}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
